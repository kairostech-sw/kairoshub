default_config:

#### python scripts extension. Python scripts goes on folder /python_scripts
python_script:

recorder:
  purge_keep_days: 7
  db_url: sqlite:////config/home-assistant_v2.db

### HA FRONTENDS
frontend:
  themes: !include_dir_merge_named hakairos-configuration/frontend/community/themes/

lovelace:
  mode: storage
  resources:
    - url: /local/time-picker-card/time-picker-card.js
      type: module
    - url: /local/weather-card/weather-card.js
      type: module
    - url: /local/clockwork-card/clockwork-card.js
      type: js
  dashboards:
    lovelace-kairoshub:
      mode: yaml
      title: Home
      icon: mdi:help
      show_in_sidebar: true
      filename: lovelace-kairoshome.yaml

#### HA Custom Events extension
#### including configuration files
ha-custom-events: !include_dir_merge_named hakairos-configuration/hacustomevents/

#### HA Kafka extension
#### including configuration files
hakafka: !include_dir_merge_named hakairos-configuration/hakafka/

#### input text entities
input_text:
  system_code:
    name: Identificativo Sistema
  system_name:
    name: Casa

##### input number entities
input_number:
  metrics_frequency:
    name: Frequenza aggiornamento
    initial: 6
    min: 1
    max: 24
    step: 1
  temperature_period1:
    min: 18
    max: 30
    step: 0.5
  temperature_period2:
    min: 18
    max: 30
    step: 0.5
  temperature_period3:
    min: 18
    max: 30
    step: 0.5
  temperature_period4:
    min: 18
    max: 30
    step: 0.5
  rollershutter_athome_position:
    min: 0
    max: 100
    step: 5
    initial: 100
    mode: slider
    name: "Posizione In Casa"
    icon: "mdi:window-shutter"
  rollershutter_notathome_position:
    min: 0
    max: 100
    step: 5
    initial: 0
    mode: slider
    name: "Posizione Fuori Casa"
    icon: "mdi:window-shutter"
  manual_heating_temp:
    min: 18
    max: 31
    step: 0.5
    initial: 31
    mode: slider
    name: "Temperatura Per Riscaldamento Manuale"
    icon: "mdi:thermometer"

##### datetime entities
input_datetime:
  ###############################################
  #           Monday
  ###############################################
  thermostat_monday_on_period1:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_monday_off_period1:
    name: Spegnimento
    has_date: false
    has_time: true
  thermostat_monday_on_period2:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_monday_off_period2:
    name: Spegnimento
    has_date: false
    has_time: true
  thermostat_monday_on_period3:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_monday_off_period3:
    name: Spegnimento
    has_date: false
    has_time: true
  thermostat_monday_on_period4:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_monday_off_period4:
    name: Spegnimento
    has_date: false
    has_time: true
  ###############################################
  #           Tuesday
  ###############################################
  thermostat_tuesday_on_period1:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_tuesday_off_period1:
    name: Spegnimento
    has_date: false
    has_time: true
  thermostat_tuesday_on_period2:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_tuesday_off_period2:
    name: Spegnimento
    has_date: false
    has_time: true
  thermostat_tuesday_on_period3:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_tuesday_off_period3:
    name: Spegnimento
    has_date: false
    has_time: true
  thermostat_tuesday_on_period4:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_tuesday_off_period4:
    name: Spegnimento
    has_date: false
    has_time: true
  ###############################################
  #           Wednesday
  ###############################################
  thermostat_wednesday_on_period1:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_wednesday_off_period1:
    name: Spegnimento
    has_date: false
    has_time: true
  thermostat_wednesday_on_period2:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_wednesday_off_period2:
    name: Spegnimento
    has_date: false
    has_time: true
  thermostat_wednesday_on_period3:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_wednesday_off_period3:
    name: Spegnimento
    has_date: false
    has_time: true
  thermostat_wednesday_on_period4:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_wednesday_off_period4:
    name: Spegnimento
    has_date: false
    has_time: true
  ###############################################
  #           Thursday
  ###############################################
  thermostat_thursday_on_period1:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_thursday_off_period1:
    name: Spegnimento
    has_date: false
    has_time: true
  thermostat_thursday_on_period2:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_thursday_off_period2:
    name: Spegnimento
    has_date: false
    has_time: true
  thermostat_thursday_on_period3:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_thursday_off_period3:
    name: Spegnimento
    has_date: false
    has_time: true
  thermostat_thursday_on_period4:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_thursday_off_period4:
    name: Spegnimento
    has_date: false
    has_time: true
  ###############################################
  #           Friday
  ###############################################
  thermostat_friday_on_period1:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_friday_off_period1:
    name: Spegnimento
    has_date: false
    has_time: true
  thermostat_friday_on_period2:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_friday_off_period2:
    name: Spegnimento
    has_date: false
    has_time: true
  thermostat_friday_on_period3:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_friday_off_period3:
    name: Spegnimento
    has_date: false
    has_time: true
  thermostat_friday_on_period4:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_friday_off_period4:
    name: Spegnimento
    has_date: false
    has_time: true
  ###############################################
  #           Saturday
  ###############################################
  thermostat_saturday_on_period1:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_saturday_off_period1:
    name: Spegnimento
    has_date: false
    has_time: true
  thermostat_saturday_on_period2:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_saturday_off_period2:
    name: Spegnimento
    has_date: false
    has_time: true
  thermostat_saturday_on_period3:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_saturday_off_period3:
    name: Spegnimento
    has_date: false
    has_time: true
  thermostat_saturday_on_period4:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_saturday_off_period4:
    name: Spegnimento
    has_date: false
    has_time: true
  ###############################################
  #           Sunday
  ###############################################
  thermostat_sunday_on_period1:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_sunday_off_period1:
    name: Spegnimento
    has_date: false
    has_time: true
  thermostat_sunday_on_period2:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_sunday_off_period2:
    name: Spegnimento
    has_date: false
    has_time: true
  thermostat_sunday_on_period3:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_sunday_off_period3:
    name: Spegnimento
    has_date: false
    has_time: true
  thermostat_sunday_on_period4:
    name: Accensione
    has_date: false
    has_time: true
  thermostat_sunday_off_period4:
    name: Spegnimento
    has_date: false
    has_time: true

##### input boolean entities
input_boolean:
  kafka_integration:
    initial: true
  assistance_request:
    name: Richiedi Assistenza
    icon: mdi:hand-coin-outline
  notification_to_read:
    name: Notifiche da leggere
  at_home:
    name: In Casa
  night:
    name: Notte
  heater_program1:
    name: Programma 1
  heater_program2:
    name: Programma 2
  heater_program3:
    name: Programma 3
  heater_program4:
    name: Programma 4
  heater_program1_on:
    name: Programma 1 Attivo
  heater_program2_on:
    name: Programma 2 Attivo
  heater_program3_on:
    name: Programma 3 Attivo
  heater_program4_on:
    name: Programma 4 Attivo
  thermostat_monday_program1:
    name: Lunedì
  thermostat_monday_program2:
    name: Lunedì
  thermostat_monday_program3:
    name: Lunedì
  thermostat_monday_program4:
    name: Lunedì
  thermostat_tuesday_program1:
    name: Martedì
  thermostat_tuesday_program2:
    name: Martedì
  thermostat_tuesday_program3:
    name: Martedì
  thermostat_tuesday_program4:
    name: Martedì
  thermostat_wednesday_program1:
    name: Mercoledì
  thermostat_wednesday_program2:
    name: Mercoledì
  thermostat_wednesday_program3:
    name: Mercoledì
  thermostat_wednesday_program4:
    name: Mercoledì
  thermostat_thursday_program1:
    name: Giovedì
  thermostat_thursday_program2:
    name: Giovedì
  thermostat_thursday_program3:
    name: Giovedì
  thermostat_thursday_program4:
    name: Giovedì
  thermostat_friday_program1:
    name: Venerdì
  thermostat_friday_program2:
    name: Venerdì
  thermostat_friday_program3:
    name: Venerdì
  thermostat_friday_program4:
    name: Venerdì
  thermostat_saturday_program1:
    name: Sabato
  thermostat_saturday_program2:
    name: Sabato
  thermostat_saturday_program3:
    name: Sabato
  thermostat_saturday_program4:
    name: Sabato
  thermostat_sunday_program1:
    name: Domenica
  thermostat_sunday_program2:
    name: Domenica
  thermostat_sunday_program3:
    name: Domenica
  thermostat_sunday_program4:
    name: Domenica
  tv_01:
    name: Ambiente 1
  tv_02:
    name: Ambiente 2
  tv_03:
    name: Ambiente 3
  tv_04:
    name: Ambiente 4
  tv_05:
    name: Ambiente 5
  tv_06:
    name: Ambiente 6
  tv_07:
    name: Ambiente 7
  sw_thermostat_frontend:
    name: frontend thermostat

#thermostat
# Example configuration.yaml entry
climate:
  - platform: generic_thermostat
    name: Riscaldamento
    heater: switch.sw_thermostat
    target_sensor: sensor.temperatura
    min_temp: 10
    max_temp: 30
    ac_mode: false
    min_cycle_duration:
      seconds: 5
    initial_hvac_mode: "off"

#switch thermostat
switch:
  - platform: mqtt
    name: sw_thermostat
    unique_id: sw_thermostat
    state_topic: "shellies/TH02/relay/0"
    command_topic: "shellies/TH02/relay/0/command"
    qos: 0
    payload_on: "on"
    payload_off: "off"
    optimistic: false
    retain: false

#region SENSOR
sensor:
  #region platform SENSOR TIME_DATE
  - platform: time_date
    display_options:
      - "date_time_iso"
  - platform: time_date
    display_options:
      - "date"
  - platform: time_date
    display_options:
      - "time"
  #endregion

  #region PLATFORM SENSOR MQTT
  - name: system_state
    platform: mqtt
    state_topic: "kairostech/state"

  - name: system_state_detail
    platform: mqtt
    state_topic: "kairostech/state/detail"

  - name: kairoshub_sw_version
    platform: mqtt
    state_topic: "kairostech/kairoshub/version"

  - name: kairoshub_sw_last_check
    platform: mqtt
    state_topic: "kairostech/kairoshub/last_software_check"

  - name: hakairos_configuration_sw_version
    platform: mqtt
    state_topic: "kairostech/hakairos-configuration/version"

  - name: hakairos_configuration_sw_last_check
    platform: mqtt
    state_topic: "kairostech/hakairos-configuration/last_software_check"

  - name: kairoshub_osversion
    platform: mqtt
    state_topic: "kairostech/os_version"

  - name: kairoshub_hostname
    platform: mqtt
    state_topic: "kairostech/hostname"

  - name: kairoshub_owner
    platform: mqtt
    state_topic: "kairostech/owner"

  - name: kairoshub_system_code
    platform: mqtt
    state_topic: "kairostech/system_code"

  - name: dayzone_temperature_0
    platform: mqtt
    state_topic: "shellies/TH01/ext_temperature/0"
    unit_of_measurement: "°C"

  - name: home_humidity
    platform: mqtt
    unit_of_measurement: "%"
    state_topic: "kairostech/sensor/humidity/0"

  #TV01
  - name: TV01_temp
    platform: mqtt
    state_topic: "shellies/TV01/info"
    unit_of_measurement: "°C"
    value_template: "{{ value_json.thermostats[0].tmp.value }}"
    payload_not_available: "offline"
  - name: TV01_pos
    platform: mqtt
    state_topic: "shellies/TV01/info"
    unit_of_measurement: "%"
    value_template: "{{ value_json.thermostats[0].pos }}"
    payload_not_available: "offline"
  - name: TV01_target_temp
    platform: mqtt
    state_topic: "shellies/TV01/info"
    unit_of_measurement: "°C"
    value_template: "{{ value_json.thermostats[0].target_t.value }}"
    payload_not_available: "offline"
  - name: TV01_battery
    platform: mqtt
    state_topic: "shellies/TV01/info"
    unit_of_measurement: "%"
    value_template: "{{ value_json.bat.value }}"
    payload_not_available: "offline"
  - name: TV01_lastupdate
    platform: mqtt
    state_topic: "shellies/TV01/info"
    value_template: "{{ states.sensor.time.state }}"
    payload_not_available: "offline"

  #TV02
  - name: TV02_temp
    platform: mqtt
    state_topic: "shellies/TV02/info"
    unit_of_measurement: "°C"
    value_template: "{{ value_json.thermostats[0].tmp.value }}"
    payload_not_available: "offline"
  - name: TV02_pos
    platform: mqtt
    state_topic: "shellies/TV02/info"
    unit_of_measurement: "%"
    value_template: "{{ value_json.thermostats[0].pos }}"
    payload_not_available: "offline"
  - name: TV02_target_temp
    platform: mqtt
    state_topic: "shellies/TV02/info"
    unit_of_measurement: "°C"
    value_template: "{{ value_json.thermostats[0].target_t.value }}"
    payload_not_available: "offline"
  - name: TV02_battery
    platform: mqtt
    state_topic: "shellies/TV02/info"
    unit_of_measurement: "%"
    value_template: "{{ value_json.bat.value }}"
    payload_not_available: "offline"
  - name: TV02_lastupdate
    platform: mqtt
    state_topic: "shellies/TV02/info"
    value_template: "{{ states.sensor.time.state }}"
    payload_not_available: "offline"

  #TV03
  - name: TV03_temp
    platform: mqtt
    state_topic: "shellies/TV03/info"
    unit_of_measurement: "°C"
    value_template: "{{ value_json.thermostats[0].tmp.value }}"
    payload_not_available: "offline"
  - name: TV03_pos
    platform: mqtt
    state_topic: "shellies/TV03/info"
    unit_of_measurement: "%"
    value_template: "{{ value_json.thermostats[0].pos }}"
    payload_not_available: "offline"
  - name: TV03_target_temp
    platform: mqtt
    state_topic: "shellies/TV03/info"
    unit_of_measurement: "°C"
    value_template: "{{ value_json.thermostats[0].target_t.value }}"
    payload_not_available: "offline"
  - name: TV03_battery
    platform: mqtt
    state_topic: "shellies/TV03/info"
    unit_of_measurement: "%"
    value_template: "{{ value_json.bat.value }}"
    payload_not_available: "offline"
  - name: TV03_lastupdate
    platform: mqtt
    state_topic: "shellies/TV03/info"
    value_template: "{{ states.sensor.time.state }}"
    payload_not_available: "offline"

  #TV04
  - name: TV04_temp
    platform: mqtt
    state_topic: "shellies/TV04/info"
    unit_of_measurement: "°C"
    value_template: "{{ value_json.thermostats[0].tmp.value }}"
    payload_not_available: "offline"
  - name: TV04_pos
    platform: mqtt
    state_topic: "shellies/TV04/info"
    unit_of_measurement: "%"
    value_template: "{{ value_json.thermostats[0].pos }}"
    payload_not_available: "offline"
  - name: TV04_target_temp
    platform: mqtt
    state_topic: "shellies/TV04/info"
    unit_of_measurement: "°C"
    value_template: "{{ value_json.thermostats[0].target_t.value }}"
    payload_not_available: "offline"
  - name: TV04_battery
    platform: mqtt
    state_topic: "shellies/TV04/info"
    unit_of_measurement: "%"
    value_template: "{{ value_json.bat.value }}"
    payload_not_available: "offline"
  - name: TV04_lastupdate
    platform: mqtt
    state_topic: "shellies/TV04/info"
    value_template: "{{ states.sensor.time.state }}"
    payload_not_available: "offline"

  #TV05
  - name: TV05_temp
    platform: mqtt
    state_topic: "shellies/TV05/info"
    unit_of_measurement: "°C"
    value_template: "{{ value_json.thermostats[0].tmp.value }}"
    payload_not_available: "offline"
  - name: TV05_pos
    platform: mqtt
    state_topic: "shellies/TV05/info"
    unit_of_measurement: "%"
    value_template: "{{ value_json.thermostats[0].pos }}"
    payload_not_available: "offline"
  - name: TV05_target_temp
    platform: mqtt
    state_topic: "shellies/TV05/info"
    unit_of_measurement: "°C"
    value_template: "{{ value_json.thermostats[0].target_t.value }}"
    payload_not_available: "offline"
  - name: TV05_battery
    platform: mqtt
    state_topic: "shellies/TV05/info"
    unit_of_measurement: "%"
    value_template: "{{ value_json.bat.value }}"
    payload_not_available: "offline"
  - name: TV05_lastupdate
    platform: mqtt
    state_topic: "shellies/TV05/info"
    value_template: "{{ states.sensor.time.state }}"
    payload_not_available: "offline"

  #TV06
  - name: TV06_temp
    platform: mqtt
    state_topic: "shellies/TV06/info"
    unit_of_measurement: "°C"
    value_template: "{{ value_json.thermostats[0].tmp.value }}"
    payload_not_available: "offline"
  - name: TV06_pos
    platform: mqtt
    state_topic: "shellies/TV06/info"
    unit_of_measurement: "%"
    value_template: "{{ value_json.thermostats[0].pos }}"
    payload_not_available: "offline"
  - name: TV06_target_temp
    platform: mqtt
    state_topic: "shellies/TV06/info"
    unit_of_measurement: "°C"
    value_template: "{{ value_json.thermostats[0].target_t.value }}"
    payload_not_available: "offline"
  - name: TV06_battery
    platform: mqtt
    state_topic: "shellies/TV06/info"
    unit_of_measurement: "%"
    value_template: "{{ value_json.bat.value }}"
    payload_not_available: "offline"
  - name: TV06_lastupdate
    platform: mqtt
    state_topic: "shellies/TV06/info"
    value_template: "{{ states.sensor.time.state }}"
    payload_not_available: "offline"

  #TV07
  - name: TV07_temp
    platform: mqtt
    state_topic: "shellies/TV07/info"
    unit_of_measurement: "°C"
    value_template: "{{ value_json.thermostats[0].tmp.value }}"
    payload_not_available: "offline"
  - name: TV07_pos
    platform: mqtt
    state_topic: "shellies/TV07/info"
    unit_of_measurement: "%"
    value_template: "{{ value_json.thermostats[0].pos }}"
    payload_not_available: "offline"
  - name: TV07_target_temp
    platform: mqtt
    state_topic: "shellies/TV07/info"
    unit_of_measurement: "°C"
    value_template: "{{ value_json.thermostats[0].target_t.value }}"
    payload_not_available: "offline"
  - name: TV07_battery
    platform: mqtt
    state_topic: "shellies/TV07/info"
    unit_of_measurement: "%"
    value_template: "{{ value_json.bat.value }}"
    payload_not_available: "offline"
  - name: TV07_lastupdate
    platform: mqtt
    state_topic: "shellies/TV07/info"
    value_template: "{{ states.sensor.time.state }}"
    payload_not_available: "offline"

  #shelly EM
  - platform: mqtt
    name: "EM_ch1"
    state_topic: "shellies/EM01/emeter/0/power"
    value_template: "{{ value }}"
    unit_of_measurement: "Watt"
  - platform: mqtt
    name: "EM_ch2"
    state_topic: "shellies/EM01/emeter/1/power"
    value_template: "{{ value }}"
    unit_of_measurement: "Watt"

  #endregion

  # - name: dayzone_humidity
  #   platform: mqtt
  #   state_topic: "shellies/TH01/ext_humidity/0"
  # - name: nightzone_temperature
  #   platform: mqtt
  #   state_topic: "shellies/TH02/ext_temperature/0"
  # - name: nightzone_humidity
  #   platform: mqtt
  #   state_topic: "shellies/TH02/ext_humidity/0"

  #region platform SENSOR MIN MAX
  #dayzone, nightzone average temperature / humidity value
  - platform: min_max
    name: Temperatura
    type: mean
    round_digits: 1
    entity_ids:
      - sensor.dayzone_temperature_0
      - sensor.TV01_temp
      - sensor.TV02_temp
      - sensor.TV03_temp
      - sensor.TV04_temp
      - sensor.TV05_temp
      - sensor.TV06_temp
      - sensor.TV07_temp
  #endregion

  #region platform SENSOR TEMPLATE
  - platform: template
    sensors:
      tv01_state:
        value_template: >-
          {% if (now() - states.sensor.TV01_lastupdate.last_changed).total_seconds() | round(0) > 3600 %}
            offline
          {% else %}
            online
          {% endif %}
      tv02_state:
        value_template: >-
          {% if (now() - states.sensor.TV02_lastupdate.last_changed).total_seconds() | round(0) > 3600 %}
            offline
          {% else %}
            online
          {% endif %}
      tv03_state:
        value_template: >-
          {% if (now() - states.sensor.TV03_lastupdate.last_changed).total_seconds() | round(0) > 3600 %}
            offline
          {% else %}
            online
          {% endif %}
      tv04_state:
        value_template: >-
          {% if (now() - states.sensor.TV04_lastupdate.last_changed).total_seconds() | round(0) > 3600 %}
            offline
          {% else %}
            online
          {% endif %}
      tv05_state:
        value_template: >-
          {% if (now() - states.sensor.TV05_lastupdate.last_changed).total_seconds() | round(0) > 3600 %}
            offline
          {% else %}
            online
          {% endif %}
      tv06_state:
        value_template: >-
          {% if (now() - states.sensor.TV06_lastupdate.last_changed).total_seconds() | round(0) > 3600 %}
            offline
          {% else %}
            online
          {% endif %}
      tv07_state:
        value_template: >-
          {% if (now() - states.sensor.TV07_lastupdate.last_changed).total_seconds() | round(0) > 3600 %}
            offline
          {% else %}
            online
          {% endif %}
      th01_state:
        value_template: >-
          {% if (now() - states.sensor.dayzone_temperature_0.last_changed).total_seconds() | round(0) > 3600 %}
            offline
          {% else %}
            online
          {% endif %}
      pretty_date:
        friendly_name: Data di oggi
        value_template: >-
          {% set today = states("sensor.date") %}
          {% set arr_week_days = ["Domenica", "Lunedì", "Martedì", "Mercoledì", "Giovedì", "Venerdì", "Sabato"] %}
          {% set arr_months = ["Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", "Novembre", "Dicembre"] %}
          {% set week_day = as_timestamp(today) | timestamp_custom('%w') | int %}
          {% set day = as_timestamp(today) | timestamp_custom('%d') %}
          {% set month = as_timestamp(today) | timestamp_custom('%m') | int %}
          {% set year = as_timestamp(today) | timestamp_custom('%Y') | int %}
          {{ arr_week_days[week_day] }}, {{ day }} {{ arr_months[month-1] }} {{ year }}
      em_assorbimento:
        friendly_name: "Assorbimento"
        value_template: '{{ (states("sensor.em_ch1")|float(default=0) + states("sensor.em_ch2")|float(default=0))|float|round(1) }}'
        unit_of_measurement: "Watt"
      em_consumo:
        friendly_name: "EM Consumo"
        value_template: '{{ (states("sensor.em_consumo_ch1")|float(default=0) + states("sensor.em_consumo_ch2")|float(default=0))|float|round(1) }}'
        unit_of_measurement: "Watt"
        icon_template: mdi:speedometer
  #endregion

  #region SENSOR INTEGRATION (accumulatori)
  - platform: integration
    source: sensor.em_ch1
    name: "EM Consumo ch1"
    unit_prefix: k
    round: 2
  - platform: integration
    source: sensor.em_ch2
    name: "EM Consumo ch2"
    unit_prefix: k
    round: 2
  #endregion

  #region SENSOR SYSTEMMONITOR
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
      - type: memory_use_percent
      - type: processor_use
      - type: processor_temperature
      - type: last_boot
  #endregion

  #region platform STATISTICS
  - platform: statistics
    name: "stat memory_use"
    entity_id: sensor.memory_use_percent
    sampling_size: 30
    max_age:
      minutes: 30
  - platform: statistics
    name: "stat disk_use"
    entity_id: sensor.disk_use_percent
    sampling_size: 30
    max_age:
      minutes: 30
  - platform: statistics
    name: "stat processor_use"
    entity_id: sensor.processor_use
    sampling_size: 75
    max_age:
      minutes: 30
  - platform: statistics
    name: "stat processor_temperature"
    entity_id: sensor.processor_temperature
    sampling_size: 100
    max_age:
      minutes: 30
  #endregion

#endregion SENSOR

#region binary_sensor
binary_sensor:
  - platform: template
    sensors:
      heater_auto:
        friendly_name: "Programma caldo"
        value_template: >-
          {% if is_state('input_boolean.heater_program1', 'on') or is_state('input_boolean.heater_program2', 'on') or is_state('input_boolean.heater_program3', 'on') or is_state('input_boolean.heater_program4', 'on') %}
            on
          {% else %}
            off
          {% endif %}
#endregion
#contabilizzatori
utility_meter:
  shelly_1pm_consumo_mensile:
    source: sensor.em_consumo
    cycle: monthly

#region covers
cover:
  - platform: mqtt
    unique_id: "rs01"
    name: "RS01"
    command_topic: "shellies/RS01/roller/0/command"
    position_topic: "shellies/RS01/roller/0/pos"
    set_position_topic: "shellies/RS01/roller/0/command/pos"
    payload_available: "true"
    payload_not_available: "false"
    retain: false
    payload_open: "open"
    payload_close: "close"
    payload_stop: "stop"
    position_open: 100
    position_closed: 0
    optimistic: false
    qos: 1
  - platform: mqtt
    unique_id: "rs02"
    name: "RS02"
    command_topic: "shellies/RS02/roller/0/command"
    position_topic: "shellies/RS02/roller/0/pos"
    set_position_topic: "shellies/RS02/roller/0/command/pos"
    payload_available: "true"
    payload_not_available: "false"
    retain: false
    payload_open: "open"
    payload_close: "close"
    payload_stop: "stop"
    position_open: 100
    position_closed: 0
    optimistic: false
    qos: 1
  - platform: mqtt
    unique_id: "rs03"
    name: "RS03"
    command_topic: "shellies/RS03/roller/0/command"
    position_topic: "shellies/RS03/roller/0/pos"
    set_position_topic: "shellies/RS03/roller/0/command/pos"
    payload_available: "true"
    payload_not_available: "false"
    retain: false
    payload_open: "open"
    payload_close: "close"
    payload_stop: "stop"
    position_open: 100
    position_closed: 0
    optimistic: false
    qos: 1
  - platform: mqtt
    unique_id: "rs04"
    name: "RS04"
    command_topic: "shellies/RS04/roller/0/command"
    position_topic: "shellies/RS04/roller/0/pos"
    set_position_topic: "shellies/RS04/roller/0/command/pos"
    payload_available: "true"
    payload_not_available: "false"
    retain: false
    payload_open: "open"
    payload_close: "close"
    payload_stop: "stop"
    position_open: 100
    position_closed: 0
    optimistic: false
    qos: 1
  - platform: mqtt
    unique_id: "rs05"
    name: "RS05"
    command_topic: "shellies/RS05/roller/0/command"
    position_topic: "shellies/RS05/roller/0/pos"
    set_position_topic: "shellies/RS05/roller/0/command/pos"
    payload_available: "true"
    payload_not_available: "false"
    retain: false
    payload_open: "open"
    payload_close: "close"
    payload_stop: "stop"
    position_open: 100
    position_closed: 0
    optimistic: false
    qos: 1
  - platform: mqtt
    unique_id: "rs06"
    name: "RS06"
    command_topic: "shellies/RS06/roller/0/command"
    position_topic: "shellies/RS06/roller/0/pos"
    set_position_topic: "shellies/RS06/roller/0/command/pos"
    payload_available: "true"
    payload_not_available: "false"
    retain: false
    payload_open: "open"
    payload_close: "close"
    payload_stop: "stop"
    position_open: 100
    position_closed: 0
    optimistic: false
    qos: 1
#endregion covers

#### hassio groups
#### use kakfa_entity_align groups for add all the entities you whant to include in the kafka align's procedure
group:
  kafka_entity_align:
    name: "Kafka entity group"
    entities:
  rolershutters:
    name: Tapparelle
    entities:
      - cover.rs01
      - cover.rs02
      - cover.rs03
      - cover.rs04
      - cover.rs05
      - cover.rs06
  kairoshub_settings:
    name: Impostazioni
    entities:
      - input_number.rollershutter_athome_position
      - input_number.rollershutter_notathome_position
      - input_number.manual_heating_temp
  kairoshub_functionalities:
    name: Funzionalità
    entities:
      - input_boolean.kafka_integration
  heating_valves:
    name: Valvole Riscaldamento
    entities:
      - sensor.tv01_temp
      - sensor.tv02_temp
      - sensor.tv03_temp
      - sensor.tv04_temp
      - sensor.tv05_temp
      - sensor.tv06_temp
      - sensor.tv07_temp
  sensor_temperatures:
    name: Sensori Ambiente
    entities:
      - sensor.dayzone_temperature_0

#### include kairos core automations
automation kairos: !include_dir_merge_list hakairos-configuration/automations/

#### automations
automation:
  - alias: HOME TO_OFF
    trigger:
      - platform: state
        entity_id: input_boolean.at_home
        from: "on"
        to: "off"
        for: "00:00:05"
    action:
      - service: cover.close_cover
        target:
          entity_id: group.rolershutters
      - event: HA_MANAGE_HOME_ON_OFF
        event_data:
          state: "{{ trigger.to_state.state }}"

  - alias: HOME TO_ON
    trigger:
      - platform: state
        entity_id: input_boolean.at_home
        from: "off"
        to: "on"
    action:
      - event: HA_MANAGE_HOME_ON_OFF
        event_data:
          state: "{{ trigger.to_state.state }}"

  - alias: AUTOMATION_H07
    trigger:
      - platform: time
        at: "07:00:00"
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.night
      - delay: 0:10
      - event: HA_MANAGE_NIGHT_ON_OFF
        event_data:
          state: "{{states('input_boolean.night')}}"
      - event: AD_KAIROSHUB_STARTED

  - alias: AUTOMATION_H20
    trigger:
      - platform: time
        at: "20:00:00"
    action:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.night
      - delay: 0:10
      - event: HA_MANAGE_NIGHT_ON_OFF
        event_data:
          state: "{{states('input_boolean.night')}}"
      - event: AD_KAIROSHUB_STARTED

  - alias: Prog riscaldamento 1
    trigger:
      - platform: time_pattern
        minutes: /5
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.heater_program1
          state: "on"
        - condition: state
          entity_id: input_boolean.heater_program2_on
          state: "off"
        - condition: state
          entity_id: input_boolean.heater_program3_on
          state: "off"
        - condition: state
          entity_id: input_boolean.heater_program4_on
          state: "off"
    action:
      - event: HA_MANAGE_HEATER
        event_data:
         data:
            event:
              eventType: HA_MANAGE_HEATER
              sender: HUB
            program: prog1
            temperature: "{{states('sensor.temperatura')}}"
            on_off_heater: "{{states('switch.sw_thermostat')}}"
            target_temp: "{{states('input_number.temperature_period1')}}"
            on_off_time_monday:
              on_time: "{{states('input_datetime.thermostat_monday_on_period1')}}"
              off_time: "{{states('input_datetime.thermostat_monday_off_period1')}}"
            on_off_time_tuesday:
              on_time: "{{states('input_datetime.thermostat_tuesday_on_period1')}}"
              off_time: "{{states('input_datetime.thermostat_tuesday_off_period1')}}"
            on_off_time_wednesday:
              on_time: "{{states('input_datetime.thermostat_wednesday_on_period1')}}"
              off_time: "{{states('input_datetime.thermostat_wednesday_off_period1')}}"
            on_off_time_thursday:
              on_time: "{{states('input_datetime.thermostat_thursday_on_period1')}}"
              off_time: "{{states('input_datetime.thermostat_thursday_off_period1')}}"
            on_off_time_friday:
              on_time: "{{states('input_datetime.thermostat_friday_on_period1')}}"
              off_time: "{{states('input_datetime.thermostat_friday_off_period1')}}"
            on_off_time_saturday:
              on_time: "{{states('input_datetime.thermostat_saturday_on_period1')}}"
              off_time: "{{states('input_datetime.thermostat_saturday_off_period1')}}"
            on_off_time_sunday:
              on_time: "{{states('input_datetime.thermostat_sunday_on_period1')}}"
              off_time: "{{states('input_datetime.thermostat_sunday_off_period1')}}"

  - alias: Prog riscaldamento 2
    trigger:
      - platform: time_pattern
        minutes: /5
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.heater_program2
          state: "on"
        - condition: state
          entity_id: input_boolean.heater_program1_on
          state: "off"
        - condition: state
          entity_id: input_boolean.heater_program3_on
          state: "off"
        - condition: state
          entity_id: input_boolean.heater_program4_on
          state: "off"
    action:
      - delay: "00:00:10"
      - event: HA_MANAGE_HEATER
        event_data:
         data:
            event:
              eventType: HA_MANAGE_HEATER
              sender: HUB
            program: prog2
            temperature: "{{states('sensor.temperatura')}}"
            on_off_heater: "{{states('switch.sw_thermostat')}}"
            target_temp: "{{states('input_number.temperature_period2')}}"
            on_off_time_monday:
              on_time: "{{states('input_datetime.thermostat_monday_on_period2')}}"
              off_time: "{{states('input_datetime.thermostat_monday_off_period2')}}"
            on_off_time_tuesday:
              on_time: "{{states('input_datetime.thermostat_tuesday_on_period2')}}"
              off_time: "{{states('input_datetime.thermostat_tuesday_off_period2')}}"
            on_off_time_wednesday:
              on_time: "{{states('input_datetime.thermostat_wednesday_on_period2')}}"
              off_time: "{{states('input_datetime.thermostat_wednesday_off_period2')}}"
            on_off_time_thursday:
              on_time: "{{states('input_datetime.thermostat_thursday_on_period2')}}"
              off_time: "{{states('input_datetime.thermostat_thursday_off_period2')}}"
            on_off_time_friday:
              on_time: "{{states('input_datetime.thermostat_friday_on_period2')}}"
              off_time: "{{states('input_datetime.thermostat_friday_off_period2')}}"
            on_off_time_saturday:
              on_time: "{{states('input_datetime.thermostat_saturday_on_period2')}}"
              off_time: "{{states('input_datetime.thermostat_saturday_off_period2')}}"
            on_off_time_sunday:
              on_time: "{{states('input_datetime.thermostat_sunday_on_period2')}}"
              off_time: "{{states('input_datetime.thermostat_sunday_off_period2')}}"

  - alias: Prog riscaldamento 3
    trigger:
      - platform: time_pattern
        minutes: /5
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.heater_program3
          state: "on"
        - condition: state
          entity_id: input_boolean.heater_program1_on
          state: "off"
        - condition: state
          entity_id: input_boolean.heater_program2_on
          state: "off"
        - condition: state
          entity_id: input_boolean.heater_program4_on
          state: "off"
    action:
      - delay: "00:00:20"
      - event: HA_MANAGE_HEATER
        event_data:
         data:
            event:
              eventType: HA_MANAGE_HEATER
              sender: HUB
            program: prog3
            temperature: "{{states('sensor.temperatura')}}"
            on_off_heater: "{{states('switch.sw_thermostat')}}"
            target_temp: "{{states('input_number.temperature_period3')}}"
            on_off_time_monday:
              on_time: "{{states('input_datetime.thermostat_monday_on_period3')}}"
              off_time: "{{states('input_datetime.thermostat_monday_off_period3')}}"
            on_off_time_tuesday:
              on_time: "{{states('input_datetime.thermostat_tuesday_on_period3')}}"
              off_time: "{{states('input_datetime.thermostat_tuesday_off_period3')}}"
            on_off_time_wednesday:
              on_time: "{{states('input_datetime.thermostat_wednesday_on_period3')}}"
              off_time: "{{states('input_datetime.thermostat_wednesday_off_period3')}}"
            on_off_time_thursday:
              on_time: "{{states('input_datetime.thermostat_thursday_on_period3')}}"
              off_time: "{{states('input_datetime.thermostat_thursday_off_period3')}}"
            on_off_time_friday:
              on_time: "{{states('input_datetime.thermostat_friday_on_period3')}}"
              off_time: "{{states('input_datetime.thermostat_friday_off_period3')}}"
            on_off_time_saturday:
              on_time: "{{states('input_datetime.thermostat_saturday_on_period3')}}"
              off_time: "{{states('input_datetime.thermostat_saturday_off_period3')}}"
            on_off_time_sunday:
              on_time: "{{states('input_datetime.thermostat_sunday_on_period3')}}"
              off_time: "{{states('input_datetime.thermostat_sunday_off_period3')}}"

  - alias: Prog riscaldamento 4
    trigger:
      - platform: time_pattern
        minutes: /5
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.heater_program4
          state: "on"
        - condition: state
          entity_id: input_boolean.heater_program1_on
          state: "off"
        - condition: state
          entity_id: input_boolean.heater_program2_on
          state: "off"
        - condition: state
          entity_id: input_boolean.heater_program3_on
          state: "off"
    action:
      - delay: "00:00:30"
      - event: HA_MANAGE_HEATER
        event_data:
         data:
            event:
              eventType: HA_MANAGE_HEATER
              sender: HUB
            program: prog4
            temperature: "{{states('sensor.temperatura')}}"
            on_off_heater: "{{states('switch.sw_thermostat')}}"
            target_temp: "{{states('input_number.temperature_period4')}}"
            on_off_time_monday:
              on_time: "{{states('input_datetime.thermostat_monday_on_period4')}}"
              off_time: "{{states('input_datetime.thermostat_monday_off_period4')}}"
            on_off_time_tuesday:
              on_time: "{{states('input_datetime.thermostat_tuesday_on_period4')}}"
              off_time: "{{states('input_datetime.thermostat_tuesday_off_period4')}}"
            on_off_time_wednesday:
              on_time: "{{states('input_datetime.thermostat_wednesday_on_period4')}}"
              off_time: "{{states('input_datetime.thermostat_wednesday_off_period4')}}"
            on_off_time_thursday:
              on_time: "{{states('input_datetime.thermostat_thursday_on_period4')}}"
              off_time: "{{states('input_datetime.thermostat_thursday_off_period4')}}"
            on_off_time_friday:
              on_time: "{{states('input_datetime.thermostat_friday_on_period4')}}"
              off_time: "{{states('input_datetime.thermostat_friday_off_period4')}}"
            on_off_time_saturday:
              on_time: "{{states('input_datetime.thermostat_saturday_on_period4')}}"
              off_time: "{{states('input_datetime.thermostat_saturday_off_period4')}}"
            on_off_time_sunday:
              on_time: "{{states('input_datetime.thermostat_sunday_on_period4')}}"
              off_time: "{{states('input_datetime.thermostat_sunday_off_period4')}}"

  - alias: Spegnimento Programma
    trigger:
      - platform: state
        entity_id: input_boolean.heater_program1
        to: "off"
      - platform: state
        entity_id: input_boolean.heater_program2
        to: "off"
      - platform: state
        entity_id: input_boolean.heater_program3
        to: "off"
      - platform: state
        entity_id: input_boolean.heater_program4
        to: "off"
    action:
      - event: AD_PROGRAM_OFF

  - alias: Richiesta assistenza
    trigger:
      - platform: state
        entity_id: input_boolean.assistance_request
        from: "off"
        to: "on"
        for: "00:00:10"
      - platform: event
        event_type: systemAssistanceOnCommand
    action:
      - service: mqtt.publish
        data_template:
          topic: "kairostech/command"
          payload: "ASSISTANCE_START"

  - alias: Richiesta assistenza FINE
    trigger:
      - platform: state
        entity_id: input_boolean.assistance_request
        from: "on"
        to: "off"
        for: "00:00:10"
      - platform: event
        event_type: systemAssistanceOffCommand
    action:
      - service: mqtt.publish
        data_template:
          topic: "kairostech/command"
          payload: "ASSISTANCE_STOP"

  - alias: OTA UPDATE CHECK
    trigger:
      - platform: time_pattern
        hours: "/23"
    action:
      - service: mqtt.publish
        data_template:
          topic: "kairostech/command"
          payload: "KAIROSHUB_RELEASE_CHECK"

  - alias: SYNC SETTINGS
    trigger:
      - platform: time
        at: "00:00:00"
    action:
      event: "AD_SETTINGS_SYNC"

  - alias: RESTORE SETTINGS
    trigger:
    action:
      event: "AD_SETTINGS_RESTORE"

  - alias: RISCALDAMENTO
    trigger:
    action:
      - event: AD_HEATING
        event_data:
          data:
            program: prog0
            event:
              eventType: AD_HEATING
              sender: HUB

  - alias: SPEGNIMENTO RISCALDAMENTO MANUALE
    trigger:
      - platform: numeric_state
        entity_id: sensor.temperatura
        above: input_number.manual_heating_temp
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: switch.sw_thermostat
          state: "on"
        - condition: state
          entity_id: input_boolean.heater_program1_on
          state: "off"
        - condition: state
          entity_id: input_boolean.heater_program2_on
          state: "off"
        - condition: state
          entity_id: input_boolean.heater_program3_on
          state: "off"
        - condition: state
          entity_id: input_boolean.heater_program4_on
          state: "off"
    action:
      - event: AD_PROGRAM_OFF
        event_data:
          program: prog0

  - alias: LOW BATTERY NOTIFICATION
    trigger:
      - platform: numeric_state
        entity_id: sensor.TV01_battery
        below: 25
      - platform: numeric_state
        entity_id: sensor.TV02_battery
        below: 25
      - platform: numeric_state
        entity_id: sensor.TV03_battery
        below: 25
      - platform: numeric_state
        entity_id: sensor.TV04_battery
        below: 25
      - platform: numeric_state
        entity_id: sensor.TV05_battery
        below: 25
      - platform: numeric_state
        entity_id: sensor.TV06_battery
        below: 25
      - platform: numeric_state
        entity_id: sensor.TV07_battery
        below: 25
    action:
      - event: AD_KAIROSHUB_NOTIFICATION
        event_data:
          type: alert
          ncode: HEATING_SENSOR_BATTERY_LOW
          entity: "{{trigger.entity_id}}"

  - alias: KAIROSHUB AUTOCONFIGURATION
    trigger:
      - platform: state
        entity_id: sensor.kairoshub_system_code
    action:
      - service: input_text.set_value
        target:
          entity_id: input_text.system_code
        data:
          value: "{{ trigger.to_state.state }}"
      - service: input_text.set_value
        target:
          entity_id: input_text.system_name
        data:
          value: "{{ states('sensor.kairoshub_owner') }} "

#### logger configuration
logger:
  default: info
  logs:
    homeassistant.components.cloud: debug
    custom_components.hakafka: debug
    custom_components.ha-custom-events: info

shell_command:
  assistance_start: "python3 ./hakairos-configuration/scripts/assistance_start.py"
  assistance_stop: "python3 ./hakairos-configuration/scripts/assistance_stop.py"
